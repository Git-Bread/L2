{"mappings":"ACCA,IAAI,GAuEJ,AApEA,iBACI,GAAI,CACA,IAAI,EAAU,MAAM,MAAM,2DACtB,CAAA,EAAQ,EAAE,EACV,QAAQ,GAAG,CAAC,8BAGhB,EAAc,AADH,CAAA,MAAM,EAAQ,IAAI,EAA7B,EACmB,GAAG,CAAC,SAAS,CAAI,EAChC,MAAO,CAAC,EAAK,IAAI,CAAE,EAAK,UAAU,CAAE,EAAK,WAAW,CAAC,AACzD,GACA,AAQR,SAAe,CAAW,EACtB,AAcJ,CAAA,WAEI,IAAI,EAAe,AADP,SAAS,cAAc,CAAC,WACX,oBAAoB,CAAC,MAC1C,EAAc,EAAa,MAAM,CACrC,IAAK,IAAI,EAAQ,EAAG,EAAQ,EAAa,IACrC,CAAY,CAAC,EAAE,CAAC,MAAM,EAE9B,CAAA,IApBI,IAAI,EAAU,SAAS,cAAc,CAAC,WACtC,IAAK,IAAI,EAAQ,EAAG,EAAQ,EAAY,MAAM,CAAE,IAAS,CACrD,IAAI,EAAsB,SAAS,aAAa,CAAC,MACjD,IAAK,IAAI,EAAI,EAAG,EAAI,EAAG,IAAK,CACxB,IAAI,EAAc,SAAS,aAAa,CAAC,KACzC,CAAA,EAAY,SAAS,CAAG,CAAW,CAAC,EAAM,CAAC,EAAE,CAC7C,EAAoB,MAAM,CAAC,EAC/B,CACA,EAAQ,MAAM,CAAC,EACnB,CACJ,EApBc,EACV,CACA,MAAM,EAAO,CACT,QAAQ,GAAG,CAAC,WAChB,CACJ","sources":["<anon>","Documents/plugg/Frontend/L2/js/javascript.js"],"sourcesContent":["//global to save on calls\nlet courseArray;\n//inital call to api and conversion to a map for use in all subfunctions\nasync function getData() {\n    try {\n        let rawData = await fetch(\"https://webbutveckling.miun.se/files/ramschema_ht23.json\");\n        if (!rawData.ok) console.log(\"problem with fetch content\");\n        let data = await rawData.json();\n        courseArray = data.map(function(data) {\n            return [\n                data.code,\n                data.coursename,\n                data.progression\n            ];\n        });\n        start(courseArray);\n    } catch (error) {\n        console.log(\"it broke\");\n    }\n}\n//applies elements to list\nfunction start(courseArray) {\n    clear();\n    let listGet = document.getElementById(\"content\");\n    for(let index = 0; index < courseArray.length; index++){\n        let tempTableRowElement = document.createElement(\"tr\");\n        for(let i = 0; i < 3; i++){\n            let tempElement = document.createElement(\"td\");\n            tempElement.innerHTML = courseArray[index][i];\n            tempTableRowElement.append(tempElement);\n        }\n        listGet.append(tempTableRowElement);\n    }\n}\n//removes elements from list (filtration)\nfunction clear() {\n    let table = document.getElementById(\"content\");\n    let tableContent = table.getElementsByTagName(\"tr\");\n    let tableLenght = tableContent.length;\n    for(let index = 1; index < tableLenght; index++)tableContent[1].remove();\n}\n//simple name sort, checks value from onclick on categories\nfunction simpleSort(val) {\n    let simpleSort = courseArray;\n    switch(val){\n        case 0:\n            simpleSort.sort((a, b)=>String(a[0]).localeCompare(b[0]));\n            break;\n        case 1:\n            simpleSort.sort((a, b)=>String(a[1]).localeCompare(b[1]));\n            break;\n        case 2:\n            simpleSort.sort((a, b)=>String(a[2]).localeCompare(b[2]));\n            break;\n    }\n    clear();\n    start(simpleSort);\n}\n//search based of content, checks if any of the three fields contains the substring and includes those, quite proud of this one. Might be expensive tho, no clue.\nfunction searchSort(search) {\n    let searchSort = courseArray;\n    searchSort = searchSort.filter((a)=>a[0].toLowerCase().includes(search.toLowerCase()) || a[1].toLowerCase().includes(search.toLowerCase()) || a[2].toLowerCase().includes(search.toLowerCase()));\n    start(searchSort);\n}\n//revving up the script\ngetData();\n\n//# sourceMappingURL=index.8421eabd.js.map\n","//global to save on calls\r\nlet courseArray;\r\n\r\n//inital call to api and conversion to a map for use in all subfunctions\r\nasync function getData() {  \r\n    try {\r\n        let rawData = await fetch(\"https://webbutveckling.miun.se/files/ramschema_ht23.json\");\r\n        if(!rawData.ok) {\r\n            console.log(\"problem with fetch content\")\r\n        }\r\n        let data = await rawData.json();\r\n        courseArray = data.map(function(data) {\r\n            return [data.code, data.coursename, data.progression];\r\n        });\r\n        start(courseArray);\r\n    }\r\n    catch(error) {\r\n        console.log(\"it broke\")\r\n    }\r\n}\r\n\r\n//applies elements to list\r\nfunction start(courseArray) {\r\n    clear();\r\n    let listGet = document.getElementById(\"content\");\r\n    for (let index = 0; index < courseArray.length; index++) {\r\n        let tempTableRowElement = document.createElement(\"tr\");\r\n        for (let i = 0; i < 3; i++) {\r\n            let tempElement = document.createElement(\"td\");\r\n            tempElement.innerHTML = courseArray[index][i];\r\n            tempTableRowElement.append(tempElement);\r\n        }\r\n        listGet.append(tempTableRowElement)\r\n    }\r\n}\r\n\r\n//removes elements from list (filtration)\r\nfunction clear() {\r\n    let table = document.getElementById(\"content\");\r\n    let tableContent = table.getElementsByTagName(\"tr\");\r\n    let tableLenght = tableContent.length;\r\n    for (let index = 1; index < tableLenght; index++) {\r\n        tableContent[1].remove();\r\n    }\r\n}\r\n\r\n//simple name sort, checks value from onclick on categories\r\nfunction simpleSort(val) {\r\n    let simpleSort = courseArray;\r\n    switch (val) {\r\n        case 0:\r\n            simpleSort.sort((a, b) => String(a[0]).localeCompare(b[0]));\r\n            break;\r\n        case 1:\r\n            simpleSort.sort((a, b) => String(a[1]).localeCompare(b[1]));\r\n            break;\r\n        case 2:\r\n            simpleSort.sort((a, b) => String(a[2]).localeCompare(b[2])); \r\n            break;\r\n    }\r\n    clear();\r\n    start(simpleSort);\r\n}\r\n\r\n//search based of content, checks if any of the three fields contains the substring and includes those, quite proud of this one. Might be expensive tho, no clue.\r\nfunction searchSort(search) {\r\n    let searchSort = courseArray;\r\n    searchSort = searchSort.filter((a) => a[0].toLowerCase().includes(search.toLowerCase()) || a[1].toLowerCase().includes(search.toLowerCase()) || a[2].toLowerCase().includes(search.toLowerCase()));\r\n    start(searchSort);\r\n}\r\n\r\n//revving up the script\r\ngetData();"],"names":["courseArray","getData","rawData","fetch","ok","console","log","data","json","map","code","coursename","progression","start","clear","tableContent","table","document","getElementById","getElementsByTagName","tableLenght","length","index","remove","listGet","tempTableRowElement","createElement","i","tempElement","innerHTML","append","error"],"version":3,"file":"index.8421eabd.js.map"}