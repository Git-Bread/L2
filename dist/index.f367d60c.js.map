{"mappings":"AAAA,yBAAyB;AACzB,IAAI;AAEJ,wEAAwE;AACxE,eAAe;IACX,IAAI;QACA,IAAI,UAAU,MAAM,MAAM;QAC1B,IAAG,CAAC,QAAQ,EAAE,EACV,QAAQ,GAAG,CAAC;QAEhB,IAAI,OAAO,MAAM,QAAQ,IAAI;QAC7B,cAAc,KAAK,GAAG,CAAC,SAAS,IAAI;YAChC,OAAO;gBAAC,KAAK,IAAI;gBAAE,KAAK,UAAU;gBAAE,KAAK,WAAW;aAAC;QACzD;QACA,MAAM;IACV,EACA,OAAM,OAAO;QACT,QAAQ,GAAG,CAAC;IAChB;AAEJ;AAEA,0BAA0B;AAC1B,SAAS,MAAM,WAAW;IACtB;IACA,IAAI,UAAU,SAAS,cAAc,CAAC;IACtC,IAAK,IAAI,QAAQ,GAAG,QAAQ,YAAY,MAAM,EAAE,QAAS;QACrD,IAAI,sBAAsB,SAAS,aAAa,CAAC;QACjD,IAAK,IAAI,IAAI,GAAG,IAAI,GAAG,IAAK;YACxB,IAAI,cAAc,SAAS,aAAa,CAAC;YACzC,YAAY,SAAS,GAAG,WAAW,CAAC,MAAM,CAAC,EAAE;YAC7C,oBAAoB,MAAM,CAAC;QAC/B;QACA,QAAQ,MAAM,CAAC;IACnB;AACJ;AAEA,yCAAyC;AACzC,SAAS;IACL,IAAI,QAAQ,SAAS,cAAc,CAAC;IACpC,IAAI,eAAe,MAAM,oBAAoB,CAAC;IAC9C,IAAI,cAAc,aAAa,MAAM;IACrC,IAAK,IAAI,QAAQ,GAAG,QAAQ,aAAa,QACrC,YAAY,CAAC,EAAE,CAAC,MAAM;AAE9B;AAEA,2DAA2D;AAC3D,SAAS,WAAW,GAAG;IACnB,IAAI,aAAa;IACjB,OAAQ;QACJ,KAAK;YACD,WAAW,IAAI,CAAC,CAAC,GAAG,IAAM,OAAO,CAAC,CAAC,EAAE,EAAE,aAAa,CAAC,CAAC,CAAC,EAAE;YACzD;QACJ,KAAK;YACD,WAAW,IAAI,CAAC,CAAC,GAAG,IAAM,OAAO,CAAC,CAAC,EAAE,EAAE,aAAa,CAAC,CAAC,CAAC,EAAE;YACzD;QACJ,KAAK;YACD,WAAW,IAAI,CAAC,CAAC,GAAG,IAAM,OAAO,CAAC,CAAC,EAAE,EAAE,aAAa,CAAC,CAAC,CAAC,EAAE;YACzD;IACR;IACA;IACA,MAAM;AACV;AAEA,iKAAiK;AACjK,SAAS,WAAW,MAAM;IACtB,IAAI,aAAa;IACjB,aAAa,WAAW,MAAM,CAAC,CAAC,IAAM,CAAC,CAAC,EAAE,CAAC,WAAW,GAAG,QAAQ,CAAC,OAAO,WAAW,OAAO,CAAC,CAAC,EAAE,CAAC,WAAW,GAAG,QAAQ,CAAC,OAAO,WAAW,OAAO,CAAC,CAAC,EAAE,CAAC,WAAW,GAAG,QAAQ,CAAC,OAAO,WAAW;IAC9L,MAAM;AACV;AAEA,uBAAuB;AACvB","sources":["Documents/plugg/Frontend/L2/js/javascript.js"],"sourcesContent":["//global to save on calls\r\nlet courseArray;\r\n\r\n//inital call to api and conversion to a map for use in all subfunctions\r\nasync function getData() {  \r\n    try {\r\n        let rawData = await fetch(\"https://webbutveckling.miun.se/files/ramschema_ht23.json\");\r\n        if(!rawData.ok) {\r\n            console.log(\"problem with fetch content\")\r\n        }\r\n        let data = await rawData.json();\r\n        courseArray = data.map(function(data) {\r\n            return [data.code, data.coursename, data.progression];\r\n        });\r\n        start(courseArray);\r\n    }\r\n    catch(error) {\r\n        console.log(\"it broke\")\r\n    }\r\n\r\n}\r\n\r\n//applies elements to list\r\nfunction start(courseArray) {\r\n    clear();\r\n    let listGet = document.getElementById(\"content\");\r\n    for (let index = 0; index < courseArray.length; index++) {\r\n        let tempTableRowElement = document.createElement(\"tr\");\r\n        for (let i = 0; i < 3; i++) {\r\n            let tempElement = document.createElement(\"td\");\r\n            tempElement.innerHTML = courseArray[index][i];\r\n            tempTableRowElement.append(tempElement);\r\n        }\r\n        listGet.append(tempTableRowElement)\r\n    }\r\n}\r\n\r\n//removes elements from list (filtration)\r\nfunction clear() {\r\n    let table = document.getElementById(\"content\");\r\n    let tableContent = table.getElementsByTagName(\"tr\");\r\n    let tableLenght = tableContent.length;\r\n    for (let index = 1; index < tableLenght; index++) {\r\n        tableContent[1].remove();\r\n    }\r\n}\r\n\r\n//simple name sort, checks value from onclick on categories\r\nfunction simpleSort(val) {\r\n    let simpleSort = courseArray;\r\n    switch (val) {\r\n        case 0:\r\n            simpleSort.sort((a, b) => String(a[0]).localeCompare(b[0]));\r\n            break;\r\n        case 1:\r\n            simpleSort.sort((a, b) => String(a[1]).localeCompare(b[1]));\r\n            break;\r\n        case 2:\r\n            simpleSort.sort((a, b) => String(a[2]).localeCompare(b[2])); \r\n            break;\r\n    }\r\n    clear();\r\n    start(simpleSort);\r\n}\r\n\r\n//search based of content, checks if any of the three fields contains the substring and includes those, quite proud of this one. Might be expensive tho, no clue.\r\nfunction searchSort(search) {\r\n    let searchSort = courseArray;\r\n    searchSort = searchSort.filter((a) => a[0].toLowerCase().includes(search.toLowerCase()) || a[1].toLowerCase().includes(search.toLowerCase()) || a[2].toLowerCase().includes(search.toLowerCase()));\r\n    start(searchSort);\r\n}\r\n\r\n//revving up the script\r\ngetData();"],"names":[],"version":3,"file":"index.f367d60c.js.map","sourceRoot":"/__parcel_source_root/"}